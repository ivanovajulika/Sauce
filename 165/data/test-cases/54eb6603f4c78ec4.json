{"uid":"54eb6603f4c78ec4","name":"test_total_sum[problem_user]","fullName":"tests.test_overview#test_total_sum","historyId":"8d9aaa77acf56e427f24751c565ed4cd","time":{"start":1670340690479,"stop":1670340761176,"duration":70697},"status":"skipped","statusMessage":"XFAIL problem_user\n\nselenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\n  (Session info: headless chrome=107.0.5304.121)\nStacktrace:\n#0 0x564181577463 <unknown>\n#1 0x56418133b8d8 <unknown>\n#2 0x56418137943a <unknown>\n#3 0x564181379651 <unknown>\n#4 0x5641813b57a4 <unknown>\n#5 0x56418139a64d <unknown>\n#6 0x5641813b330f <unknown>\n#7 0x56418139a443 <unknown>\n#8 0x56418136b3c5 <unknown>\n#9 0x56418136c531 <unknown>\n#10 0x5641815c9dce <unknown>\n#11 0x5641815cd192 <unknown>\n#12 0x5641815ae93e <unknown>\n#13 0x5641815ce103 <unknown>\n#14 0x5641815a1d85 <unknown>\n#15 0x5641815ef0a8 <unknown>\n#16 0x5641815ef239 <unknown>\n#17 0x56418160a492 <unknown>\n#18 0x7fe9542a4609 start_thread","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cfa538004186e4dc144543b622df5308\")>\n\n    @allure.feature(\n        \"US_006.00 | Checkout: overview > Страница проверки и подтверждения заказа..\"\n    )\n    @allure.story(\n        \"TC_006.00.02 |  Checkout: overview > Отображение информации \"\n        \"о итоговой стоимости заказа на странице 'Checkout: overview'\"\n    )\n    @pytest.mark.parametrize(\n        \"username\",\n        [\n            \"standard_user\",\n            pytest.param(\"problem_user\", marks=pytest.mark.xfail(reason=\"problem_user\")),\n            \"performance_glitch_user\",\n        ],\n    )\n    def test_total_sum(browser):\n>       test_overview(browser)\n\ntests/test_overview.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_overview.py:36: in test_overview\n    page.cart_counter(quantity=1)\npages/base_page.py:39: in cart_counter\n    text = self.browser.find_element(*CART_BADGE).text\n../../../.cache/pypoetry/virtualenvs/sauce-NlGQ8SHG-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../../.cache/pypoetry/virtualenvs/sauce-NlGQ8SHG-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2308e88460>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x5641815ef239 \\\\u003Cunknown>\\\\n#17 0x56418160a492 \\\\u003Cunknown>\\\\n#18 0x7fe9542a4609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".shopping_cart_badge\"}\nE         (Session info: headless chrome=107.0.5304.121)\nE       Stacktrace:\nE       #0 0x564181577463 <unknown>\nE       #1 0x56418133b8d8 <unknown>\nE       #2 0x56418137943a <unknown>\nE       #3 0x564181379651 <unknown>\nE       #4 0x5641813b57a4 <unknown>\nE       #5 0x56418139a64d <unknown>\nE       #6 0x5641813b330f <unknown>\nE       #7 0x56418139a443 <unknown>\nE       #8 0x56418136b3c5 <unknown>\nE       #9 0x56418136c531 <unknown>\nE       #10 0x5641815c9dce <unknown>\nE       #11 0x5641815cd192 <unknown>\nE       #12 0x5641815ae93e <unknown>\nE       #13 0x5641815ce103 <unknown>\nE       #14 0x5641815a1d85 <unknown>\nE       #15 0x5641815ef0a8 <unknown>\nE       #16 0x5641815ef239 <unknown>\nE       #17 0x56418160a492 <unknown>\nE       #18 0x7fe9542a4609 start_thread\n\n../../../.cache/pypoetry/virtualenvs/sauce-NlGQ8SHG-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"time_delta","time":{"start":1670340689206,"stop":1670340689206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"password","time":{"start":1670340689207,"stop":1670340689207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1670340689207,"stop":1670340690478,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"browser::0","time":{"start":1670340761219,"stop":1670340761280,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"time_delta::0","time":{"start":1670340761281,"stop":1670340761281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"TC_006.00.02 |  Checkout: overview > Отображение информации о итоговой стоимости заказа на странице 'Checkout: overview'"},{"name":"feature","value":"US_006.00 | Checkout: overview > Страница проверки и подтверждения заказа.."},{"name":"tag","value":"@pytest.mark.xfail(reason='problem_user')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_overview"},{"name":"host","value":"fv-az241-905"},{"name":"thread","value":"2709-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_overview"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"username","value":"'problem_user'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='problem_user')"]},"source":"54eb6603f4c78ec4.json","parameterValues":["'problem_user'"]}