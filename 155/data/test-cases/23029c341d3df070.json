{"uid":"23029c341d3df070","name":"test_add_all_products_by_one","fullName":"tests.test_main#test_add_all_products_by_one","historyId":"2273308a667924f1824dfbe99f63e6f9","time":{"start":1670128848248,"stop":1670128848625,"duration":377},"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e1c4a34bb0f80443d63627918bf14c51\")>\n\n    @allure.feature(\"US_003.00 | Inventory item > Страница товара.\")\n    @allure.story(\n        \"TC_003.00.02 | Inventory item > Добавление товара в корзину на странице 'Inventory item'\"\n    )\n    def test_add_all_products_by_one(browser):\n        link = \"https://www.saucedemo.com/inventory.html\"\n        page = InventoryPage(browser, link)\n        list_all_names = page.get_all_names()\n        count = len(list_all_names)\n        for index in range(count):\n            name = browser.find_elements(*ALL_NAMES)[index]\n            name.click()\n            link = browser.current_url\n            page = ItemPage_4(browser, link)\n            page.add_to_cart_btn_is_present()\n            page.add_to_cart()\n            page.cart_counter(quantity=1)\n            page.go_to_cart()\n            page = CartPage(browser, link)\n>           page.cart_page_counter(quantity=1)\n\ntests/test_main.py:217: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.cart_page.CartPage object at 0x7f4dfb638580>, quantity = 1\n\n    def cart_page_counter(self, quantity):\n        \"\"\"Метод сверяет значение на счетчике кнопки Корзина с количеством quantity\"\"\"\n        text = self.browser.find_element(By.CLASS_NAME, \"cart_quantity\").text\n>       assert text == quantity\nE       AssertionError\n\npages/cart_page.py:25: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"username","time":{"start":1670128846734,"stop":1670128846734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"password","time":{"start":1670128846735,"stop":1670128846735,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1670128846735,"stop":1670128848246,"duration":1511},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e1c4a34bb0f80443d63627918bf14c51\")>\n\n    @allure.feature(\"US_003.00 | Inventory item > Страница товара.\")\n    @allure.story(\n        \"TC_003.00.02 | Inventory item > Добавление товара в корзину на странице 'Inventory item'\"\n    )\n    def test_add_all_products_by_one(browser):\n        link = \"https://www.saucedemo.com/inventory.html\"\n        page = InventoryPage(browser, link)\n        list_all_names = page.get_all_names()\n        count = len(list_all_names)\n        for index in range(count):\n            name = browser.find_elements(*ALL_NAMES)[index]\n            name.click()\n            link = browser.current_url\n            page = ItemPage_4(browser, link)\n            page.add_to_cart_btn_is_present()\n            page.add_to_cart()\n            page.cart_counter(quantity=1)\n            page.go_to_cart()\n            page = CartPage(browser, link)\n>           page.cart_page_counter(quantity=1)\n\ntests/test_main.py:217: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.cart_page.CartPage object at 0x7f4dfb638580>, quantity = 1\n\n    def cart_page_counter(self, quantity):\n        \"\"\"Метод сверяет значение на счетчике кнопки Корзина с количеством quantity\"\"\"\n        text = self.browser.find_element(By.CLASS_NAME, \"cart_quantity\").text\n>       assert text == quantity\nE       AssertionError\n\npages/cart_page.py:25: AssertionError","steps":[],"attachments":[{"uid":"f226fb1c43b7be42","name":"screenshot","source":"f226fb1c43b7be42.png","type":"image/png","size":94471}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670128848857,"stop":1670128848919,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"US_003.00 | Inventory item > Страница товара."},{"name":"story","value":"TC_003.00.02 | Inventory item > Добавление товара в корзину на странице 'Inventory item'"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main"},{"name":"host","value":"fv-az190-494"},{"name":"thread","value":"2740-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"8a42f7ddcff610ba","reportUrl":"https://ivanovajulika.github.io/Sauce/154//#testresult/8a42f7ddcff610ba","status":"passed","time":{"start":1670128092769,"stop":1670128096593,"duration":3824}},{"uid":"96b934c5b30d739f","reportUrl":"https://ivanovajulika.github.io/Sauce/153//#testresult/96b934c5b30d739f","status":"failed","statusDetails":"AssertionError","time":{"start":1670124417460,"stop":1670124417698,"duration":238}}]},"tags":[]},"source":"23029c341d3df070.json","parameterValues":[]}