{"uid":"1813a62ba29dd806","name":"test_add_to_cart_random_item","fullName":"tests.test_main#test_add_to_cart_random_item","historyId":"0d6ae7d8a2977fa79703d90b5fa54fbf","time":{"start":1670124423039,"stop":1670124423246,"duration":207},"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ba6cc9ae54b5d4fb4382c1977996177c\")>\n\n    @allure.feature(\"US_004.00 | Your cart > Страница корзины. Кнопка 'Корзина'.\")\n    @allure.story(\n        \"TC_004.01.02 | Your cart > Работа кнопки 'Корзина': ввод валидных данных - добавить 1 товар в корзину.\"\n    )\n    def test_add_to_cart_random_item(browser):\n        page = InventoryPage(browser, link)\n        # добавить в корзину 1 любой товар\n        page.add_to_cart_random()\n        # проверить, что кнопка remove присутствует\n        page.btn_remove_is_present_random()\n        # Создаем список из списков всех товаров положенных в корзину\n        list_all_remove = page.get_all_items_remove()\n        # проверяем счетчик на кнопке Корзина\n>       page.cart_counter(quantity=\"1\")\n\ntests/test_main.py:277: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.inventory_page.InventoryPage object at 0x7fc185000370>\nquantity = '1'\n\n    def cart_counter(self, quantity):\n        \"\"\"Метод получает значение счетчика на кнопке Корзина и сравнивает его с quantity.\"\"\"\n        text = self.browser.find_element(*CART_BADGE).text\n>       assert int(text) == quantity\nE       AssertionError\n\npages/base_page.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"password","time":{"start":1670124421744,"stop":1670124421744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"username","time":{"start":1670124421744,"stop":1670124421744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1670124421744,"stop":1670124423039,"duration":1295},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ba6cc9ae54b5d4fb4382c1977996177c\")>\n\n    @allure.feature(\"US_004.00 | Your cart > Страница корзины. Кнопка 'Корзина'.\")\n    @allure.story(\n        \"TC_004.01.02 | Your cart > Работа кнопки 'Корзина': ввод валидных данных - добавить 1 товар в корзину.\"\n    )\n    def test_add_to_cart_random_item(browser):\n        page = InventoryPage(browser, link)\n        # добавить в корзину 1 любой товар\n        page.add_to_cart_random()\n        # проверить, что кнопка remove присутствует\n        page.btn_remove_is_present_random()\n        # Создаем список из списков всех товаров положенных в корзину\n        list_all_remove = page.get_all_items_remove()\n        # проверяем счетчик на кнопке Корзина\n>       page.cart_counter(quantity=\"1\")\n\ntests/test_main.py:277: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.inventory_page.InventoryPage object at 0x7fc185000370>\nquantity = '1'\n\n    def cart_counter(self, quantity):\n        \"\"\"Метод получает значение счетчика на кнопке Корзина и сравнивает его с quantity.\"\"\"\n        text = self.browser.find_element(*CART_BADGE).text\n>       assert int(text) == quantity\nE       AssertionError\n\npages/base_page.py:40: AssertionError","steps":[],"attachments":[{"uid":"f4ea8f5aafe625e5","name":"screenshot","source":"f4ea8f5aafe625e5.png","type":"image/png","size":658897}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1670124423705,"stop":1670124423765,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"TC_004.01.02 | Your cart > Работа кнопки 'Корзина': ввод валидных данных - добавить 1 товар в корзину."},{"name":"feature","value":"US_004.00 | Your cart > Страница корзины. Кнопка 'Корзина'."},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main"},{"name":"host","value":"fv-az241-905"},{"name":"thread","value":"2736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1813a62ba29dd806.json","parameterValues":[]}